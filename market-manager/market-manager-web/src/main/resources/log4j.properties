#设置日志级别、及日志输出位置(appender)
#log4j.rootLogger = [level],appenderName,appenderName2,... 
#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL 
log4j.rootLogger = INFO,systemOut,logToFile

#配置每一个appender
#1)org.apache.log4j.ConsoleAppender(输出到控制台) 
#2)org.apache.log4j.FileAppender(输出到文件) 
#3)org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件) 
#4)org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件) 
#5)org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方) 


#输出到控制台的配置
log4j.appender.systemOut = org.apache.log4j.ConsoleAppender 
#输出级别、是否立即输出、err为红色,out为黑色
log4j.appender.systemOut.Threshold = INFO 
log4j.appender.systemOut.ImmediateFlush = TRUE 
log4j.appender.systemOut.Target = System.out 
#输出布局
log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout 
log4j.appender.systemOut.layout.ConversionPattern = [%d{yyyy-MM-dd HH:mm:ss}][market-manager-web] [%C->%M(%L)] %m%n


#每天产生一个日志文件
log4j.appender.logToFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.logToFile.Threshold = INFO 
log4j.appender.logToFile.ImmediateFlush = TRUE 
# -File = C:\log4j.log:指定消息输出到C:\log4j.log文件 
# -Append = FALSE:默认值true,将消息追加到指定文件中，false指将消息覆盖指定的文件内容 
# -DatePattern='.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件。
# -Encoding = UTF-8:可以指定文件编码格式 
log4j.appender.logToFile.File = /Users/public/log/market/market-manager-web/market-manager-web-localhost.log
log4j.appender.logToFile.DatePattern = '.'yyyy-MM-dd
log4j.appender.logToFile.Append = true
log4j.appender.logToFile.Encoding = UTF-8
log4j.appender.logToFile.layout = org.apache.log4j.PatternLayout 
log4j.appender.logToFile.layout.ConversionPattern = [%d{yyyy-MM-dd HH:mm:ss}][market-manager-web] [%C->%M(%L)] %m%n


















